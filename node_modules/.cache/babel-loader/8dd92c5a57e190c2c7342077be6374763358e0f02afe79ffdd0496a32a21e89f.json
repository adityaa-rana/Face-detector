{"ast":null,"code":"var _jsxFileName = \"C:\\\\ADI\\\\PROJECTS\\\\LAST_TRY\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emotion, setEmotion] = useState(\"...\");\n  const [score, setScore] = useState(\"\");\n  const [status, setStatus] = useState(\"Connecting...\");\n\n  // Start webcam stream\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      setStatus(\"Streaming...\");\n      startFrameCapture();\n    }).catch(err => {\n      console.error(\"Camera access denied:\", err);\n      setStatus(\"Error: Camera access denied\");\n    });\n  }, []);\n\n  // Capture and send frame every second\n  const startFrameCapture = () => {\n    setInterval(() => {\n      if (!videoRef.current || !canvasRef.current) return;\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const base64Image = canvas.toDataURL('image/jpeg');\n      sendFrameToBackend(base64Image);\n    }, 1000); // Send frame every 1 second\n  };\n\n  // Send image to Flask backend\n  const sendFrameToBackend = async base64Image => {\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: base64Image\n        })\n      });\n      const data = await response.json();\n      if (data.emotion && data.score) {\n        setEmotion(data.emotion);\n        setScore(data.score.toFixed(2));\n      }\n    } catch (err) {\n      console.error(\"Failed to send frame:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDE0 Real-Time Emotion Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emotion\",\n        children: [\"Detected Emotion: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: emotion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Attentiveness Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PdLXsQKzfOvSB0EsLD1ko6gyVCQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","canvasRef","emotion","setEmotion","score","setScore","status","setStatus","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","startFrameCapture","catch","err","console","error","setInterval","canvas","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","base64Image","toDataURL","sendFrameToBackend","response","fetch","method","headers","body","JSON","stringify","image","data","json","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","style","display","_c","$RefreshReg$"],"sources":["C:/ADI/PROJECTS/LAST_TRY/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './styles.css';\n\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emotion, setEmotion] = useState(\"...\");\n  const [score, setScore] = useState(\"\");\n  const [status, setStatus] = useState(\"Connecting...\");\n\n  // Start webcam stream\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then(stream => {\n        videoRef.current.srcObject = stream;\n        setStatus(\"Streaming...\");\n        startFrameCapture();\n      })\n      .catch(err => {\n        console.error(\"Camera access denied:\", err);\n        setStatus(\"Error: Camera access denied\");\n      });\n  }, []);\n\n  // Capture and send frame every second\n  const startFrameCapture = () => {\n    setInterval(() => {\n      if (!videoRef.current || !canvasRef.current) return;\n\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      const base64Image = canvas.toDataURL('image/jpeg');\n      sendFrameToBackend(base64Image);\n    }, 1000); // Send frame every 1 second\n  };\n\n  // Send image to Flask backend\n  const sendFrameToBackend = async (base64Image) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ image: base64Image })\n      });\n\n      const data = await response.json();\n\n      if (data.emotion && data.score) {\n        setEmotion(data.emotion);\n        setScore(data.score.toFixed(2));\n      }\n    } catch (err) {\n      console.error(\"Failed to send frame:\", err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>ðŸ§  Real-Time Emotion Detection</h1>\n      <video ref={videoRef} autoPlay playsInline muted />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n\n      <div className=\"results\">\n        <div className=\"emotion\">Detected Emotion: <span>{emotion}</span></div>\n        <div className=\"score\">Attentiveness Score: <span>{score}</span></div>\n        <div className=\"status\">{status}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}